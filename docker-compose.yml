version: "3.6"
services:
################################## php-fpm
  test_backend:
    container_name: php_test
    build:
      context: ./.docker/php
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      XDEBUG_CONFIG: "remote_host=192.168.220.1 remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    volumes:
      - ./:/var/www/html
      - ./var/cache:/var/www/html/var/cache
      - ./var/log:/var/www/html/var/log
      - ./.docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./.docker/php/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      - ./.docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini

  test_nginx:
    container_name: nginx_test
    image: nginx:stable-alpine
    ports:
      - '8080:80'
    volumes:
      - ./:/var/www/html
      - ./config/jwt:/var/www/html/config/jwt
      - ./.docker/nginx/default_local.conf:/etc/nginx/conf.d/default.conf

  mysql:
    image: library/mysql:5.7
    env_file:
      - .env
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-log:/var/log/mysql
    ports:
      - "3307:3306"
################################## pma
  phpmyadmin:
    image: phpmyadmin
    env_file:
      - .env
    environment:
      PMA_HOST: mysql
    ports:
      - "3128:80"

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
volumes:
  jwt-keys:
  files:
  nginx-logs:
  symfony-logs:
  mysql-data:
  mysql-log:
  db-data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
